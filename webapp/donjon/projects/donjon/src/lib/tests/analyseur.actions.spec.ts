import { ExprReg } from "../utils/compilation/expr-reg";

// VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
// â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
//    EXPRESSIONS RÃ‰GULIÃˆRES
// â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
// VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV


describe('Epressions rÃ©guliÃ¨res âˆ’ Verbes', () => {

    // VERBE Ã€ Lâ€™INFINITIF
    // - verbe(1)
  
    it('Verbe infinitifâ€¯:  Â«â€¯marcherâ€¯Â»', () => {
      const result = ExprReg.xVerbeInfinitif.exec("marcher");
      expect(result).not.toEqual(null);
      expect(result[1]).toEqual("marcher"); // infinitif
    });
  
    it('Verbe infinitifâ€¯:  Â«â€¯partirâ€¯Â»', () => {
      const result = ExprReg.xVerbeInfinitif.exec("partir");
      expect(result).not.toEqual(null);
      expect(result[1]).toEqual("partir"); // infinitif
    });
  
    it('Verbe infinitifâ€¯:  Â«â€¯boireâ€¯Â»', () => {
      const result = ExprReg.xVerbeInfinitif.exec("boire");
      expect(result).not.toEqual(null);
      expect(result[1]).toEqual("boire"); // infinitif
    });
  
    it('Verbe infinitifâ€¯:  Â«â€¯marcherâ€¯Â»', () => {
      const result = ExprReg.xVerbeInfinitif.exec("marcher");
      expect(result).not.toEqual(null);
      expect(result[1]).toEqual("marcher"); // infinitif
    });
  
    it('Verbe infinitifâ€¯:  Â«â€¯se brosserâ€¯Â»', () => {
      const result = ExprReg.xVerbeInfinitif.exec("se brosser");
      expect(result).not.toEqual(null);
      expect(result[1]).toEqual("se brosser"); // infinitif
    });
  
    it('Verbe infinitifâ€¯:  Â«â€¯sâ€™Ã©gosillerâ€¯Â»', () => {
      const result = ExprReg.xVerbeInfinitif.exec("sâ€™Ã©gosiller");
      expect(result).not.toEqual(null);
      expect(result[1]).toEqual("sâ€™Ã©gosiller"); // infinitif
    })
  
    it('Verbe infinitifâ€¯:  Â«â€¯s\'Ã©veillerâ€¯Â»', () => {
      const result = ExprReg.xVerbeInfinitif.exec("s'Ã©veiller");
      expect(result).not.toEqual(null);
      expect(result[1]).toEqual("s'Ã©veiller"); // infinitif
    });
  
    it('Verbe infinitifâ€¯: Â«â€¯oiseauâ€¯Â» (ðŸ’¥)', () => {
      const result = ExprReg.xVerbeInfinitif.exec("oiseau");
      expect(result).toEqual(null);
    });
  
    it('Verbe infinitifâ€¯: Â«â€¯un boucherâ€¯Â» (ðŸ’¥)', () => {
      const result = ExprReg.xVerbeInfinitif.exec("un boucher");
      expect(result).toEqual(null);
    });
  
  
  });