
import { ExprReg } from "../utils/compilation/expr-reg";

// VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
// ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
//    [1/1] EXPRESSIONS R√âGULI√àRES
// ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
// VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV

describe('Epressions r√©guli√®res ‚àí Synonymes', () => {

    it('Attribut ele‚ÄØ: ¬´‚ÄØinterpr√©ter Alain comme le capitaine‚ÄØ¬ª ', () => {
        const result = ExprReg.xSynonymes.exec('interpr√©ter Alain comme le capitaine');
        expect(result).not.toEqual(null);
        expect(result[1]).toEqual('Alain'); // synonymes
        expect(result[2]).toEqual('le capitaine'); // original
    });

    it('Attribut ele‚ÄØ: ¬´‚ÄØinterpr√©ter Alain et le marin comme l‚Äôapprenti du village‚ÄØ¬ª ', () => {
        const result = ExprReg.xSynonymes.exec('interpr√©ter Alain et le marin comme l‚Äôapprenti du village');
        expect(result).not.toEqual(null);
        expect(result[1]).toEqual('Alain et le marin'); // synonymes
        expect(result[2]).toEqual('l‚Äôapprenti du village'); // original
    });

    it('Attribut ele‚ÄØ: ¬´‚ÄØinterpr√©ter le marin, Alain et le boss comme le capitaine crochet‚ÄØ¬ª ', () => {
        const result = ExprReg.xSynonymes.exec('interpr√©ter le marin, Alain et le boss comme le capitaine crochet');
        expect(result).not.toEqual(null);
        expect(result[1]).toEqual('le marin, Alain et le boss'); // synonymes
        expect(result[2]).toEqual('le capitaine crochet'); // original
    });

    it('Attribut ele‚ÄØ: ¬´‚ÄØInterpr√©ter marcher comme se d√©placer‚ÄØ¬ª ', () => {
        const result = ExprReg.xSynonymes.exec('Interpr√©ter marcher comme se d√©placer');
        expect(result).not.toEqual(null);
        expect(result[1]).toEqual('marcher'); // synonymes
        expect(result[2]).toEqual('se d√©placer'); // original
    });

    it('Attribut ele‚ÄØ: ¬´‚ÄØinterpr√©ter marcher, courrir, sauter, s‚Äô√©tirer et danser comme s‚Äôexercer‚ÄØ¬ª ', () => {
        const result = ExprReg.xSynonymes.exec('interpr√©ter marcher, courrir, sauter, s‚Äô√©tirer et danser comme s‚Äôexercer');
        expect(result).not.toEqual(null);
        expect(result[1]).toEqual('marcher, courrir, sauter, s‚Äô√©tirer et danser'); // synonymes
        expect(result[2]).toEqual('s‚Äôexercer'); // original
    });

    // => Pas contr√¥l√© dans l‚Äôexpression r√©guli√®re mais devra l‚Äô√™tre par l‚Äôanalyseur
    // it('Attribut ele‚ÄØ: ¬´‚ÄØinterpr√©ter courir comme le pied de bois‚ÄØ¬ª (üí•) ', () => {
    //     const result = ExprReg.xSynonymes.exec('interpr√©ter courir comme le pied de bois');
    //     expect(result).toEqual(null);
    // });

});