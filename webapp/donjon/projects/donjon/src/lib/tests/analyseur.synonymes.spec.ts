import { ContextePartie } from "../models/jouer/contexte-partie";
import { ExprReg } from "../utils/compilation/expr-reg";
import { TestUtils } from "../utils/test-utils";

// VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
// ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
//    [1/2] EXPRESSIONS R√âGULI√àRES
// ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
// VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV

describe('Epressions r√©guli√®res ‚àí Synonymes', () => {

  it('Attribut ele‚ÄØ: ¬´‚ÄØinterpr√©ter Alain comme le capitaine‚ÄØ¬ª ', () => {
    const result = ExprReg.xSynonymes.exec('interpr√©ter Alain comme le capitaine');
    expect(result).not.toEqual(null);
    expect(result[1]).toEqual('Alain'); // synonymes
    expect(result[2]).toEqual('le capitaine'); // original
  });

  it('Attribut ele‚ÄØ: ¬´‚ÄØinterpr√©ter Alain et le marin comme l‚Äôapprenti du village‚ÄØ¬ª ', () => {
    const result = ExprReg.xSynonymes.exec('interpr√©ter Alain et le marin comme l‚Äôapprenti du village');
    expect(result).not.toEqual(null);
    expect(result[1]).toEqual('Alain et le marin'); // synonymes
    expect(result[2]).toEqual('l‚Äôapprenti du village'); // original
  });

  it('Attribut ele‚ÄØ: ¬´‚ÄØinterpr√©ter le marin, Alain et le boss comme le capitaine crochet‚ÄØ¬ª ', () => {
    const result = ExprReg.xSynonymes.exec('interpr√©ter le marin, Alain et le boss comme le capitaine crochet');
    expect(result).not.toEqual(null);
    expect(result[1]).toEqual('le marin, Alain et le boss'); // synonymes
    expect(result[2]).toEqual('le capitaine crochet'); // original
  });

  it('Attribut ele‚ÄØ: ¬´‚ÄØInterpr√©ter marcher comme se d√©placer‚ÄØ¬ª ', () => {
    const result = ExprReg.xSynonymes.exec('Interpr√©ter marcher comme se d√©placer');
    expect(result).not.toEqual(null);
    expect(result[1]).toEqual('marcher'); // synonymes
    expect(result[2]).toEqual('se d√©placer'); // original
  });

  it('Attribut ele‚ÄØ: ¬´‚ÄØinterpr√©ter marcher, courrir, sauter, s‚Äô√©tirer et danser comme s‚Äôexercer‚ÄØ¬ª ', () => {
    const result = ExprReg.xSynonymes.exec('interpr√©ter marcher, courrir, sauter, s‚Äô√©tirer et danser comme s‚Äôexercer');
    expect(result).not.toEqual(null);
    expect(result[1]).toEqual('marcher, courrir, sauter, s‚Äô√©tirer et danser'); // synonymes
    expect(result[2]).toEqual('s‚Äôexercer'); // original
  });

  // => Pas contr√¥l√© dans l‚Äôexpression r√©guli√®re mais devra l‚Äô√™tre par l‚Äôanalyseur
  // it('Attribut ele‚ÄØ: ¬´‚ÄØinterpr√©ter courir comme le pied de bois‚ÄØ¬ª (üí•) ', () => {
  //     const result = ExprReg.xSynonymes.exec('interpr√©ter courir comme le pied de bois');
  //     expect(result).toEqual(null);
  // });

});



// VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
// ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
//    [2/2] TEST SC√âNARIO
// ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
// VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
describe('Synonymes ‚àí Sc√©nario synonyme action)', () => {

  it('courir comme marcher', () => {
    const scenario = '' +
      'action marcher: fin action ' +
      'action sauter: fin action ' +
      'Interpr√©ter courir comme marcher. ' +
      '';
    const ctx = TestUtils.genererEtCommencerLeJeu(scenario);

    expect(ctx.jeu.actions).toHaveSize(2);
    expect(ctx.jeu.actions[0].infinitif).toEqual('marcher');
    expect(ctx.jeu.actions[0].synonymes).toHaveSize(1);
    expect(ctx.jeu.actions[0].synonymes[0]).toEqual('courir');
    expect(ctx.jeu.actions[1].infinitif).toEqual('sauter');
    expect(ctx.jeu.actions[1].synonymes).toHaveSize(0);
  });

  it('jumper et plonger comme sauter', () => {
    const scenario = '' +
      'action marcher: fin action ' +
      'action sauter: fin action ' +
      'Interpr√©ter jumper et plonger comme sauter. ' +
      '';
    const ctx = TestUtils.genererEtCommencerLeJeu(scenario);

    expect(ctx.jeu.actions).toHaveSize(2);
    expect(ctx.jeu.actions[0].infinitif).toEqual('marcher');
    expect(ctx.jeu.actions[0].synonymes).toHaveSize(0);
    expect(ctx.jeu.actions[1].infinitif).toEqual('sauter');
    expect(ctx.jeu.actions[1].synonymes).toHaveSize(2);
    expect(ctx.jeu.actions[1].synonymes[0]).toEqual('jumper');
    expect(ctx.jeu.actions[1].synonymes[1]).toEqual('plonger');
  });

  it('courrir comme marcher et sauter (üí•)', () => {
    const scenario = '' +
      'Marcher est une action. ' +
      'Sauter est une action. ' +
      'Interpr√©ter courir comme marcher. ' +
      'Interpr√©ter courir comme sauter. ' +
      '';
    let ctx: ContextePartie;
    expect(function () { ctx = TestUtils.genererEtCommencerLeJeu(scenario) }).toThrowError();
  });


  it('fruit et pomme comme pomme rouge', () => {
    const scenario = '' +
      'La pomme rouge est un fruit. ' +
      'La table est un support. ' +
      'Interpr√©ter pomme et fruit comme la pomme rouge.' +
      '';
    const ctx = TestUtils.genererEtCommencerLeJeu(scenario);

    // (index 0 et 1 utilis√©s pour inventaire et joueur)
    expect(ctx.jeu.objets).toHaveSize(4);
    expect(ctx.jeu.objets[2].nom).toEqual('pomme rouge');
    expect(ctx.jeu.objets[2].synonymes).toHaveSize(2);
    expect(ctx.jeu.objets[2].synonymes[0].nom).toEqual('pomme');
    expect(ctx.jeu.objets[2].synonymes[0].epithete).toBeFalsy();
    expect(ctx.jeu.objets[2].synonymes[1].nom).toEqual('fruit');
    expect(ctx.jeu.objets[2].synonymes[1].epithete).toBeFalsy();
    expect(ctx.jeu.objets[3].nom).toEqual('table');
    expect(ctx.jeu.objets[3].synonymes).toBeFalsy();
  });

});