export class ExprReg {

  // Caract√®res r√©serv√©s:
  // ∆µ et ∆∂ ‚àí commentaire
  static readonly caractereDebutTexte = '∆µ';
  static readonly caractereFinTexte = '∆∂';
  static readonly xCaracteresCommentaire = /∆µ|∆∂/g;
  static readonly xCaractereDebutCommentaire = /∆µ/g;
  static readonly xCaractereFinCommentaire = /∆∂/g;
  //   ∆∑ ‚àí retour √† la ligne
  static readonly caractereRetourLigne = '∆∑';
  static readonly xCaractereRetourLigne = /∆∑/g;
  //    î ‚àí virgule dans les comentaires
  static readonly caractereVirgule = ' î';
  static readonly xCaractereVirgule = / î/g;
  //    ñ ‚àí point virgule dans les commentaires
  static readonly caracterePointVirgule = ' ñ';
  static readonly xCaracterePointVirgule = / ñ/g;

  /** Nombre
   * - Exemples :
   *     - 0
   *     - 233242342134
   *     - 3
   *     - 42
   *     - 9.2333
   *     - 998,333
   *     - 0,3
   *     - 0,03
   *     - 303,3
   */
  static readonly xNombre = /^((?:-?(?:(?:(?:[1-9][0-9]*|0)[\.|,][0-9]+)|(?:[1-9][0-9]*)))|0)$/;

  /** Nombre d√©cimal
   * - Exemples :
   *     - 
   */
  static readonly xNombreEntier = /^((?:-?(?:[1-9][0-9]*))|0)$/;

  /** Nombre d√©cimal
   * - Exemples :
   *     - 
   */
  static readonly xNombreDecimal = /^(0|(([1-9][0-9]*|0)[\.|,][0-9]+))$/;

  /**
   * Verbe √† l‚Äôinfinitif.
   * - D√©coupage :
   *     - verbe(1)
   * - Exemples :
   *     - marcher
   *     - partir
   *     - boire
   *     - se brosser
   *     - s‚Äô√©gosiller
   * - Tests unitaires :
   *     - marcher
   *     - partir
   *     - boire
   *     - se brosser
   *     - s‚Äô√©gosiller
   *     - s'√©veiller
   *     - üí• oiseau
   *     - üí• un boucher
   *     - üí• l‚Äôarmurier
   */
  static readonly xVerbeInfinitif = /^((?:se |s‚Äô|s')?(?!l'|l‚Äô)\S+(?:ir|er|re))$/i;

  /**
   * Groupe nominal.
   * - D√©coupage‚ÄØ:
   *     - D√©terminant(1), Nom(2), √âpith√®te(3)
   * - Exemples‚ÄØ:
   *     - la(1) pomme de terre(2) pourrie(3)
   *     - la(1) canne √† p√®che(2)
   *     - le(1) chapeau(2) gris(3)
   *     - chapeau(2)
   *     - le(1) chapeau(2)
   * - Tests unitaires‚ÄØ:
   *     - La pomme de terre pourrie
   *     - la canne √† p√®che
   *     - le chapeau gris
   *     - l‚Äôarracheur de dents dorr√©es
   *     - Bruxelles-Capitale
   *     - üí• 20 tomates
   *     - üí• une tomate
   *     - üí• des pi√®ces
   */
  static readonly xGroupeNominal = /^(le |la |l(?:‚Äô|')|les )?(?!(?:\d|un|une|des|le|la|les|l\b)|")(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )(?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)(\S+))?$/i;

  static readonly xInitialiseA = /(?: )?initialis√©(?:e)?(?:s)? √† (\d+)$/i;

  // ================================================================================================
  //  D√âFINITIONS DES √âL√âMENTS DU MONDE
  // ================================================================================================

  /** √©l√©ment g√©n√©rique simple
   * - ex1: Le (1) champignon des bois (2) odorant (3) (champignons des bois)(4) est un l√©gume(5) mangeable(6).
   * - => D√©terminant(1), Nom(2), √âpith√®te(3), F√©minin et autre forme(4), Classe(5), Attribut(6).
   * - Tests unitaires :
   *     - Paris est un lieu
   *     - La table basse est un objet
   *     - L'apprentie sorci√®re (f) est une personne fatigu√©e
   *     - üí• Ce sont des fruits
   *     - üí• Le bucheron est une personne ici
   */
  static readonly xDefinitionElementAvecType = /^(?!un |une |ce |c‚Äô|c'|elle |il |elles |ils |sa |son |ses |si |avant |apr√®s |dire |changer |ex√©cuter |terminer |refuser )(le |(?:de )?(?:la |l‚Äô|l')|les |du )?(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )((?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)\S+))?(?:(?: )(\(.+\))?)? (?:est|sont) (?:un|une|des) (\S+)(?:(?: )(?!(?:au|√†|dans|ici)\b)(.+))?$/i;

  /** √©l√©ment g√©n√©rique positionn√© par rapport √† compl√©ment
   * - D√©coupage :
   *     - determinant(1), nom(2), √©pith√®te(3) f√©minin?(4), type(5), attributs(6), position(7), compl√©ment(8)
   *     - determinant(1), nom(2), √©pith√®te(3) f√©minin?(4), type(5), attributs(6), ici(9)
   * - Exemples :
   *     - La (1) {pomme de terre}(2) pourrie(3) (pommes de terre)(4) est un l√©gume(5) pourri(6) {dans le}(7) jardin(8).
   *     - Les(1) {torches en bois}(2) enflam√©es(3) (f)(4) sont des objets(5) maudits(6) {dans le}(7) jardin(8).
   *     - L‚Äôall√©e(1) (f)(4) est un lieu(5) {au sud du}(7) d√©part(8)
   * - Tests unitaires
   *     - Les torches en bois enflam√©es sont des objets maudits dans le jardin
   *     - La pomme de terre (pommes de terre) est un l√©gume pourri dans la grange encorcel√©e
   *     - L‚Äôall√©e principale (f) est un lieu au sud du d√©part
   *     - La gare est un lieu dans Lisbonne
   *     - Le bucheron est une personne ici
   *     - L‚Äôarbre se trouve dans la for√™t
   */
  static readonly xPositionElementGeneriqueDefini = /^(?!un |une |ce |c‚Äô|c'|elle |il |elles |ils |sa |son |ses |si |avant |apr√®s |dire |changer |ex√©cuter |terminer |refuser )(le |(?:de )?(?:la |l‚Äô|l')|les |du )?(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )((?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)\S+))?(?:(?: )(\(.+\))?)? (?:est|sont|se trouve(?:nt)?) (?:|(?:un|une|des) (\S+?)(?:(?: )(?!hors)(\S+?))? )?(?:(?:((?:(?:(?:√† l(?:‚Äô|')(?:int√©rieur|interieur|ext√©rieur|exterieur|est|ouest))|hors|en (?:haut|bas|dessous)|au(?: |\-)(?:dessus|dessous|nord|sud)) (?:du |de (?:la |l‚Äô|l')?|des ))|(?:(?:dans|sur|sous) (?:la |le |l(?:‚Äô|')|les |un | une )?|de (?:la |l(?:‚Äô|'))|du ))(.+))|(ici|dessus|dedans|dessous))$/i;

  /** √©l√©ment g√©n√©rique positionn√© par rapport √† compl√©ment :
   * - D√©coupage :
   *     - Formulation A : d√©terminant(1), nom (2), √©pith√®te (3), f√©minin+autre forme(4), position(9), compl√©ment(10)
   *     - Formulation B : d√©terminant(5), nom (6), √©pith√®te (7), f√©minin+autre forme(8), position(9), compl√©ment(10)
   * - Exemples :
   *     - Formulation A : Il y a des pommes de terre anciennes (f, pomme de terre) dans le champ. 
   *     - Formulation B : Une canne √† p√®che neuve (cannes √† p√®che) est sur le bord du lac.
   * - Tests unitaires :
   *     - 
   *     - 
   *     - 
   *     - 
   *     - 
   */
  static readonly xPositionElementGeneriqueIndefini = /^(?:(?:il y a (un |une |des |du |de la |de l(?:‚Äô|')|[1-9]\d* )(\S+|(?:\S+ (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )((?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)\S+?))?(?:(?: )(\(.+\))?)?)|(?:(un |une |des |du |de l(?:‚Äô|'))(\S+|(?:\S+ (?:√†|en|de(?: la)?|du|des) \S+))(?:(?: )(?!hors)(\S+))?(?:(?: )(\(.+\))?)? (?:est|sont))) ((?:(?:√† l(?:‚Äô|')(?:int√©rieur|interieur|ext√©rieur|exterieur|est|ouest)|hors|en (?:haut|bas|dessous)|au(?: |\-)(?:dessus|dessous|nord|sud)) (?:du |de (?:la |l‚Äô|l')?|des ))|(?:(?:dans|sur|sous) (?:la |le |l(?:‚Äô|')?|les |un |une )?))(.+)/i;

  /** pronom personnel position :
   * => cas 1‚ÄØ: position(1) compl√©ment(3)
   * => cas 2 : position(2) compl√©ment(3)
   * => cas 3‚ÄØ:‚ÄØici(3)*/
  static readonly xPronomPersonnelPosition = /^(?:(?:(?:il|elle|celui-ci|celle-ci) est)|(?:(?:ils|elles|celles-ci|ceux-ci) sont)) (?:(?:(?:(?:(√† l(?:‚Äô|')int√©rieur|√† l(?:‚Äô|')ext√©rieur|hors|au sud|au nord|√† l(?:‚Äô|')est|√† l(?:‚Äô|')ouest|en haut|en bas|au-dessus|au-dessous) (?:du |de (?:la |l‚Äô|l')?|des ))|(?:(dans|sur|sous) (?:la |le |les |l(?:‚Äô|')|un |une )|de (?:la |l(?:‚Äô|'))|du ))(.+))|(ici|dessus|dedans|dessous))$/i;


  /** pronom d√©monstratif
   * - (C‚Äôest/Ce sont un/des)(1), type(2), [attributs(3)]
   * - Ex: C‚Äôest une personne fach√©e.
  */
  static readonly xPronomDemonstratifTypeAttributs = /^((?:c(?:‚Äô|')est (?:un|une))|(?:ce sont des)) (\S+)( .+)?/i;

  /** pronom personnel + attribut
   * - attributs(1)
   * - Ex: Il est fach√©, grand et fort.
   * - Ex: Celui-ci grand.
   */
  static readonly xPronomPersonnelAttribut = /^(?:(?:(?:il|elle|celui-ci|celle-ci) est)|(?:(?:ils|elles|celles-ci|ceux-ci) sont))((?!une |un |des ) (?:.+[^,])(?:$| et (?:.+[^,])|(?:, .+[^,])+ et (?:.+[^,])))/i;

  /**  
   * Pronom personnel + contenu
   * - D√©coupage :
   *     - (elementA[[, elementsBCD] et elementE])(1)
   * - Exemples‚ÄØ:
   *     - Elle contient 7, 21 et 9.
   *     - Elle contient la cuisine et le salon.
   *     - Ils contiennent "Alice", "Bob", "Carole" et "David".
   * - Tests unitaires :
   *     - Elle contient 200
   *     - Ils incluent 7
   *     - Elle inclut 7, 21 et 9
   *     - Elle contient la cuisine et le salon
   *     - Ils contiennent "Alice", "Bob", "Carole" et "David"
   *     - üí• Bob contient 200
   */
  static readonly xPronomPersonnelContenu = /^(?:(?:(?:il|elle|celui-ci|celle-ci) (?:contient|inclut))|(?:(?:ils|elles|celles-ci|ceux-ci) (?:contiennent|incluent)))(?: ((?:[^,\n\r]+)(?:$| et (?:[^,\n\r]+)|(?:, [^,\n\r]+)+ et (?:[^,\n\r]+))))?/i;

  /** Propri√©t√©
   * - D√©coupage :
   *     - son|sa propri√©t√©(1) est|vaut(6) valeur(7)
   *     - la|le|l' prori√©t√©(2) du|de la|de l' compl√©ment(3) est|vaut(6) valeur(7)
   *     - sa r√©action(1) (concernant le)(4) sujet(5) est|vaut(6) valeur(7)
   *     - la r√©action(2) du|de la|de l' compl√©ment(3) (au sujet du|de la)(4) sujet(5) est|vaut(6) valeur(7)
   * - Exemples‚ÄØ:
   *     - Sa r√©action est "Je viens avec vous.".
   *     - La description du bateau est "C‚Äôest un fameux rafio.".
   *     - Sa r√©action √† propos de la pomme ou des poires est "C‚Äôest bon pour la sant√©.".
   *     - Sa r√©action concernant la pomme est : changer le joueur poss√®de la pomme; dire "Je vous la donne‚ÄØ!".
   *     - La r√©action du capitaine concernant les pirates est "A√Øe a√Øe a√Øe‚Ä¶".
   *     - La r√©action du capitaine concernant les pirates, les m√©chants hargneux ou les malfrats est "A√Øe a√Øe a√Øe‚Ä¶"
   *     - La r√©action du sch√©rif rouge √† propos des pirates, des m√©chants ou des malfrats est "nrstnrstnrst".
   * - Tests unitaires :
   *     - Son texte est "Voici ce qui est √©crit"
   *     - Sa valeur vaut 3
   *     - La description du bateau est "C‚Äôest un fameux rafio"
   *     - La r√©action du capitaine du bateau concernant le tr√©sor est "Vous ne l‚Äôaurez pas !"
   *     - La r√©action de la cavali√®re hant√©e au sujet des bois, de la prairie ou des fleurs est dire "C‚Äôest naturel"; dire "Quoi d‚Äôautre ?"
   *     - Sa r√©action concernant la pomme est : changer le joueur poss√®de la pomme; dire "Je vous la donne‚ÄØ!"
   */
  static readonly xProprieteReaction = /^(?:(?:(?:son|sa|leur) (\S+?))|(?:(?:la |le |les |l(?:‚Äô|'))(\S+?) (?:du |de (?:la |l‚Äô|l')|des )(.+?))) (?:(√† propos|au sujet|concernant) (?:des |du |de la |de l(?:‚Äô|')|la |le |les |l‚Äô|l'|un |une |)((?:.+?)(?:(?:,|ou) (?:des |du |de la |de l(?:‚Äô|')|la |le |les |l‚Äô|l'|un |une |).+?)*) )?(est|sont|vaut|valent)(?:(?: )?\:(?: )?)?(?: (.+))?$/i;

  /** capacit√© -> verbe(1) compl√©ment(2) */
  static readonly xCapacite = /^(?:(?:(?:il|elle) permet)|(?:(?:ils|elles) permettent)) (?:de |d(?:‚Äô|'))(se \S+|\S+)( .+|)/i;

  /** √©l√©ment g√©n√©rique ->
   * - D√©coupage‚ÄØ:
   *     - D√©terminant(1) nom(2) √©pith√®te(3) [(f, autre forme)]\(4) est/sont attributs(5).
   * - Exemples‚ÄØ:
   *     - Les pommes de terre pourries (f, pomme de terre) sont mauves, odorantes et humides.
   * - Tests unitaires :
   *     - Le bateau est vieux et trou√©
   *     - Julien est grand
   *     - L‚Äôaliance du lac rouge (f) est petite, fragile, vieille et dor√©e
   *     - Les pommes de terre pourries (f, pomme de terre) sont mauves, odorantes et humides
   */
  static readonly xElementSimpleAttribut = /^(?!un |une |ce |c‚Äô|c'|elle |il |elles |ils |sa |son |ses )(le |la |l(?:‚Äô|')|les )?(\S+|(?:\S+ (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+))(?:(?: )((?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)\S+))?(?:(?: )(\(.+\))?)? (?:est|sont) ((?!une |un |des |au |√† |dans )(?:.+[^,])(?:$| et (?:.+[^,]$)|(?:, .+[^,])+ et (?:.+[^,]$)))/i;

  /**
   * Synonymes
   * - D√©coupage :
   *     - interpr√©ter (synonymeA[[, synonymeBCD] et synonymeE])(1) comme original(2)
   * - Tests unitaires‚ÄØ:
   *     - interpr√©ter Alain comme le capitaine
   *     - interpr√©ter Alain et le marin comme l‚Äôapprenti du village
   *     - interpr√©ter le marin, Alain et le boss comme le capitaine crochet
   *     - Interpr√©ter marcher comme se d√©placer
   *     - interpr√©ter marcher, courrir, sauter, s‚Äô√©tirer et danser comme s‚Äôexercer
   *     (- üí• interpr√©ter courir comme le pied de bois)
   */
  static readonly xSynonymes = /^interpr√©ter ((?:.+?)(?:(?:, (?:.+?))*(?: et (?:.+?)))?) comme (.+)$/i;

  /**
   * Activer / D√©sactiver un param√®tre
   * - D√©coupage :
   *     - activer/d√©sactiver(1) param√®tre(2)
   */
  static readonly xActiverDesactiver = /^(activer|d√©sactiver) (.+)$/i;

  // ================================================================================================
  //  TYPES
  // ================================================================================================

  /**
   * Nouveau type d‚Äô√©l√©ment.
   * - D√©coupage :
   *     - un/une(1) nouveauType(2) est un/une typeParent(3) {attributs}(4)
   * - Exemples :
   *     - Un meuble est un objet.
   *     - Un fruit est un objet mangeable, l√©ger et p√©rissable.
   *     - Un lutin est une personne.
   * - Tests unitaires‚ÄØ:
   *     - Un meuble est un objet
   *     - Un fruit est un objet mangeable, l√©ger et p√©rissable
   *     - un lutin est une personne bavarde
   *     - üí• Le lutin est une personne bavarde
   *     - üí• Un meuble est fix√©
   */
  static readonly xNouveauType = /^(un(?:e)?) (\S+) est (?:un(?:e)?) (\S+)(?: ((?:.+?)(?:(?:, (?:.+?))*(?: et (?:.+?)))?))?$/i;

  /**
   * Pr√©cision pour un type d‚Äô√©l√©ment.
   * - D√©coupage :
   *     - un/une(1) type(2) est attributs(3)
   * - Exemples :
   *     - Un meuble est fix√©.
   *     - Un lutin est bavard, peureux et farceur.
   * - Tests unitaires
   *     - Un meuble est fix√©
   *     - un chien est affectueux et poilu
   *     - Un lutin est bavard, peureux et farceur
   *     - üí• Un meuble est un objet
   *     - üí• Un fruit est un objet mangeable, l√©ger et p√©rissable
   *     - üí• Un lutin est une personne bavarde
   *     - üí• Le meuble est fix√©
   */
  static readonly xPrecisionType = /^(un(?:e)?) (\S+) est (?!un |une )(?:((?:.+?)(?:(?:, (?:.+?))*(?: et (?:.+?)))?))$/i;

  // ================================================================================================
  //  ACTIONS
  // ================================================================================================

  /** 
   * nouvelle action
   * - D√©coupage :
   *     - verbe(1) [[√†/de/‚Ä¶]\(2) ceci(3)[[ √†/de/sur/‚Ä¶]\(4) cela(5)]] est une action[ qui concerne un|une|deux(6) typeObjetA(7) attributObjetA(8) [prioriteAttributObjetA(9)] [et un|une(10) typeObjetB(11) attributObjetB(12) [prioriteAttributObjetB(13)]]]
   * - Exemples :
   *     - Jeter ceci est une action qui concerne un objet poss√©d√©.
   *     - Examiner ceci est une action qui concerne 1 objet visible prioritairement disponible.
   *     - prendre ceci avec cela est une action qui concerne un objet prioritairement disponible et un objet visible prioritairement poss√©d√©
   *     - Appuyer sur ceci avec cela est une action qui concerne deux objets accessibles prioritairement poss√©d√©s.
   * - Tests unitaires
   *     - Jeter ceci est une action qui concerne un objet poss√©d√©.
   *     - Examiner ceci est une action qui concerne 1 objet visible prioritairement disponible.
   *     - prendre ceci avec cela est une action qui concerne un objet prioritairement disponible et un objet visible prioritairement poss√©d√©
   *     - Appuyer sur ceci avec cela est une action qui concerne deux objets accessibles prioritairement poss√©d√©s.
   */
  static readonly xAction = /^((?:se |s‚Äô|s')?\S+(?:ir|er|re))(?:(?: (\S+))? (ceci)(?:(?: (\S+))? (cela))?)? est une action(?: qui concerne (un |une |deux |1 |2 |la |le |l‚Äô|l')?(\S+)(?: (\S+))?(?: prioritairement (\S+))?(?: et (un |une |1 |la |le |l‚Äô|l')(\S+)(?: (\S+))?(?: prioritairement (\S+))?)?)?$/i;

  /** Le joueur peut verbe(1) [[[ √†/de/sur/‚Ä¶]\(2) d√©terminant(3) nom(4) epithete(5)]: instructions(6) */
  static readonly xActionSimplifiee = /^Le joueur peut ((?:se |s‚Äô|s')?\S+(?:ir|er|re))(?:(?: (?!(?:un|une|le|la|les|l)\b)(\S+?))? (le |la |les |l(?:‚Äô|')|des |de l(?:‚Äô|')|de la |du |un |une )?(\S+|(?:\S+ (?:√† |en |de(?: la)? |du |des |d'|d‚Äô)\S+))(?:(?: )((?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)\S+))?)?(?: *):(?: *)(.+)?$/i;
  /** Description d'une action => [refuser|ex√©cuter|terminer]\(1) verbe(2) [ceci(3) [(avec|et|vers) cela(4)]]: instructions(5) */
  static readonly xDescriptionAction = /^(refuser|ex√©cuter|terminer) ((?:se |s‚Äô|s')?\S+(?:ir|er|re))(?:(?: \S+)? (ceci)(?:(?: \S+)? (cela))?)?\s?:(.+)$/i;

  /** L‚Äôaction infinitif(1){ {prepCeci(2)} ceci|cela|ici(3){ {preCela(4)} ceci|cela|ici(5)}}  */
  static readonly xActionExecuterAction = /^(?:l(?:'|‚Äô)action) (\S+(?:er|re|ir))(?: (?!ceci|cela|ici)(\S+))?(?: (ceci|cela|ici)(?: (?!ceci|cela|ici)(\S+) (ceci|cela|ici))?)?$/i;
  /** La commande "commande(1)" */
  static readonly xActionExecuterCommande = /^(?:la commande) \"(.+)\"$/i;

  /** condition -> si(1) {condition}(2), {cons√©quence}(3) */
  static readonly rRefuser = /^(si) (.+)(?:,)(.+)/i;

  // ================================================================================================
  //  R√àGLES
  // ================================================================================================

  /** condition/√©v√©nement -> avant|apr√®s|remplacer\(1) {√©v√®nements}(2): {cons√©quences}(3)
   * - avant(1) (aller au nord, aller au sud ou sortir)(2):( pata pata)(3)
   * - avant commencer le jeu : pata pata
   * - avant aller au nord, aller au sud ou sortir: pata pata
   */
  // static readonly rAvantApresRemplacerSi = /^(avant|apr√®s|apres|remplacer|si) (.+?)(?:(?: )?)(.+)/i;
  static readonly rAvantApresRemplacer = /^(avant|apr√®s|apres|remplacer) ((?:.+?)(?:(?:, (?:.+?))*(?: ou (?:.+?)))?)(?: )?:(.+)$/i;

  /**
   * une action impliquant {√©l√©ment1}(1)[ et {√©l√©ment2}(2)]
   */
  static readonly rActionImpliquant = /^(?:une )?action impliquant (.+?)(?: et (.+?))?$/i;

  /**
  * un d√©placement vers {√©l√©ment1}(1)[ ou {√©l√©ment2}(2)]
  */
  static readonly rDelpacementVers = /^(?:un )?d√©placement vers (.+?)?$/i;

  /**
   * une action quelconque
   */
  static readonly rActionQuelconque = /^(?:une )?action quelconque$/i;

  // ================================================================================================
  //  COMMANDES
  // ================================================================================================

  /** 
   * G√©n√©ralement, une commande est compos√©e d‚Äôun verbe √† l‚Äôinfinitf
   * parfois suivit puis d‚Äôun groupe nominal:
   * - aller au nord
   * - aller nord
   * - prendre la chemise rouge
   * - prendre sac
   * - effacer
   * - utiliser la cl√© rouge avec la porte
   * - utiliser la cl√© rouge avec la porte verte
   * - donner la pi√®ce au pirate
   * - jeter l‚Äô√©p√©e
   * - => utiliser(1) la(3) cl√©(4) rouge(5) \[sur(7) la(8) porte(9) verte(10)](6)
   * - => peidre(1) sur(2) la(3) porte(4)
   */
  static readonly xCommandeInfinitif = /^(\S+(?:ir|er|re))(?:(?: (avec|et|sur|sous|√†|au|aux|vers|dans|hors|pour|en|de))? (le |la |les |l'|l‚Äô|du |de (?:la |l'|l‚Äô)|des |un |une |0 |[1-9]\d* |au |√† (?:la |l'|l‚Äô)|√† |mon |ma |mes |se |me )?(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?)|(?:objets (?:dans|sous|sur) \S+))(?:(?: )((?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)\S+?))?( (avec|et|sur|sous|√†|au|aux|vers|dans|hors|pour|en|de) (le |la |les |l'|l‚Äô|des |du |de la |de l(?:‚Äô|')|un |une |au |√† l'|√† l‚Äô|√† la |√† |mon |ma |mes |se |me )?(\S+?|(?:\S+? (?:√† |en |de(?: la)? |du |des |d'|d‚Äô)\S+?))(?:(?: )((?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)\S+?))?)?)?$/i;

  // -------------------------------------------
  //  PARLER, INTERROGER, MONTRER, DEMANDER , ‚Ä¶
  // -------------------------------------------

  /**
   * 1) PARLER DE SUJET AVEC INTERLOCUTEUR (formulation qui √©vite les ambigu√Øt√©s avec les noms compos√©s)
   * - => parler(1) de la(2) table √† manger(3) abim√©e(4) avec(5) le(6) comte du bois(7) √©nerv√©(8)
   * - parler du baton avec le fermier
   * - parler du poisson rouge avec le p√©cheur √©nerv√©
   * - parler de la couronne magique avec le sorcier enflamm√©
   * - discuter de la table √† manger avec le comte du bois
   */
  static readonly xCommandeParlerSujetAvecInterlocuteur = /^(parler|discuter) (du |de (?:la |l(?:‚Äô|'))?|des |d(?:‚Äô|')(?:un |une )?)(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )(?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)(\S+))? (avec) (le |la |l(?:‚Äô|')|les )?(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )(?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)(\S+))?$/i;

  /**
   * 2) PARLER AVEC INTERLOCUTEUR CONCERNANT SUJET (formulation qui √©vite les ambigu√Øt√©s avec les noms compos√©s)
   * => discuter(1) avec le(2) capitaine du bateau(3) endormi(4) concernant(5) la(6) cabine de navigation(7) ensanglant√©e(8)
   * - parler au marchand ambulant concernant l‚Äôargent perdu
   * - discuter avec le coq au vin √† propos de l‚Äôassaisonement
   * - parler √† pigeon intelligent concernant miettes de pain rassies
   * - parler avec le capitaine √† propos de carte aux tr√©sors
   * - discuter avec le capitaine du bateau endormi concernant la cabine de navigation ensanglant√©e
   */
  static readonly xCommandeParlerAvecInterlocuteurConcernantSujet = /^(parler|discuter) (avec (?:la |le |les |l‚Äô|l')?|√† (?:la |l‚Äô|l')?|au(?:x)? )(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )(?!d‚Äô|d'|et |un |de |des |√† |au |aux )(\S+))? (?:(√† propos(?:| d‚Äô| d')?|concernant|sur) (les |un |une |du |des |(?:de )?(?:la |le |l‚Äô|l')?)?)(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )(?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)(\S+))?$/i;

  /**
   * 3) INTERROGER INTERLOCUTEUR CONCERNANT SUJET (formulation qui √©vite les ambigu√Øt√©s avec les noms compos√©s)
   * - => interroger(1) le(2) comte du bois(3) sauvage(4) sur(5) les(6) elfs aux pouvoirs(7) mal√©fiques(8)
   * - interroger le fermier concernant la poule
   * - questionner le fermier g√©ant √† propos de la poule rousse
   * - questionner le boulanger sur de la farine grise
   * - questionner le marchand d‚Äôarmes concernant une √©p√©e magique
   * - interroger elf sur de l‚Äôeau douce
   * - interroger le comte du bois sauvage sur les elfs aux pouvoirs mal√©fiques
   * - questionner les lutins concernant du bois √† br√ªler
   * - interroger Dracula √† propos d‚Äôune fiole
   */
  static readonly xCommandeQuestionnerInterlocuteurConcernantSujet = /^(interroger|questionner) (le |la |l(?:‚Äô|')|les )?(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )(?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)(\S+))? (?:(√† propos(?:| d‚Äô| d')?|concernant|sur) (les |un |une |du |des |(?:de )?(?:la |le |l‚Äô|l')?)?)(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )(?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)(\S+))?$/i;

  /**
   * 4a) DEMANDER/DONNER/MONTRER SUJET √Ä INTERLOCUTEUR
   * - => donner(1) la(2) pi√®ce du tr√©sor(3) maudit(4) (√† la(6))(5) princesse aux souhaits(7) √©nerv√©e(8)
   * - montrer poisson au chat
   * - donner la pi√®ce du tr√©sor maudit √† la princesse aux souhaits √©nerv√©e
   * - donner une pi√®ce √† la princesse
   * - demander de la nourriture √† l‚Äôaubergiste
   * - demander poison √† vendeur embulant
   * - parler du somnif√®re au magicien
   * - parler d‚Äôune fiole de poison au magicien mal√©fique
   * - donner saucisse √† griller √† vendeur
   * - montrer saucisse √† griller √† vendeur √† viande
   * - parler de manger √† l‚Äôaubergiste
   * - demander √† boire √† l‚Äôaubergiste
   */
  static readonly xCommandeDemanderSujetAInterlocuteur = /^(montrer|demander|donner|parler) (les |(?:d(?:‚Äô|'))?(?:un |une |1 )|du |des |(?:de )?(?:|0 |[1-9]\d* |la |le |l‚Äô|l')?)?((?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?)|\S+?|)(?:(?: )(?!√† |au |aux )(\S+))? (au(?:x)? |√† (la |l‚Äô|l')?)(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )(?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)(\S+))?$/i;

  /**
   * 4b) DEMANDER/DONNER √Ä VERBE √Ä INTERLOCUTEUR
   * - => demander(1)( )(2)(√† dormir)(3) longtemps(4) (√† l‚Äô(6))(5)aubergiste(7) cupide(8)
   * - demander √† boire au tavernier
   * - demander √† dormir longtemps √† l‚Äôaubergiste cupide
   * - demander √† l‚Äôaubergiste √† dormir => pas pris en compte car pas un verbe
   */
  static readonly xCommandeDemanderAVerbeAInterlocuteur = /^(demander|donner) (√† \S+(?:ir|er|re))(?:(?: )(?!√† |au |aux )(\S+))? (au(?:x)? |√† (la |l‚Äô|l')?)(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )(?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)(\S+))?$/i;

  /**
   * 5) PARLER AVEC INTERLOCUTEUR DE SUJET (formulation qui peut poser des soucis avec les noms compos√©s)
   * - => discuter(1) (avec le)(2) comte(3) Dracula(4) (de la(6))(5) tournure(7) inatendue(8)
   * - parler √† mousse de mat
   * - parler avec la magicienne √©tourdie du sort rat√©
   * - discuter avec Jean-Paul de Jason
   * - parler au magicien de la potion de vie
   * - parler au magicien du bois de la potion magique (=> souci)
   * - discuter avec le comte Dracula de la tournure inatendue
   */
  static readonly xCommandeParlerAvecInterlocuteurDeSujet = /^(parler|discuter) (du |de (?:la |l(?:‚Äô|'))?|des |d(?:‚Äô|')(?:un |une )?)(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )(?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)(\S+))? (avec) (le |la |l(?:‚Äô|')|les )?(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )(?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)(\S+))?$/i;

  /**
   * 6) MONTRER/DEMANDER/DONNER √Ä INTERLOCUTEUR SUJET (formulation √† d√©conseiller, on privil√©gie infinitif + compl. direct + compl. indirect)
   * - => donner(1) au(2) marquis(3) √©nerv√©(4)( )(5)une(6) potion de relaxation(7) magique(8)
   * - demander √† magicien chemin
   * - donner au marquis √©nerv√© une potion de relaxation magique
   * - montrer √† la tortue le chemin de la victoire
   */
  static readonly xCommandeDemanderAInterlocuteurSujet = /^(parler|discuter) (du |de (?:la |l(?:‚Äô|'))?|des |d(?:‚Äô|')(?:un |une )?)(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )(?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)(\S+))? (avec) (le |la |l(?:‚Äô|')|les )?(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )(?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)(\S+))?$/i;

  /** 
   * il y a aussi des commandes sp√©ciales:
   * - position
   * - sorties
   * - inventaire
   * - aide
   * - aide parler
   */
  static readonly xCommandeSpeciale = /^(position|sorties|inventaire|aide)(?: (\S+))?$/i;

  // ================================================================================================
  //  CONDITIONS
  // ================================================================================================


  /**
   * [si] (le|la|les|‚Ä¶(2) xxx(3) yyy(4))|(ceci|cela))(1) verbe(5) [pas|plus(6)] compl√©ment(7)
   */
  static readonly xCondition = /^(?:si )?((?:(le |la |les |l'|l‚Äô|du |de (?:la|l‚Äô|l')|des |un |une )?(\S+|(?:\S+ (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+))(?:(?: )((?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)\S+))?)|ceci|cela|ici) (?:(?:n(?:'|‚Äô)|ne )?((?:se \S+)|est|sont|vaut|valent|d√©passe(?:nt)?|attei(?:gne)?nt|poss√®de(?:nt)?|porte(?:nt)?|contient|commence|r√©agit|d√©clenche)(?: (pas|plus))?)(?: (.+))?$/i;

  /**
   * - La valeur de ceci vaut 3
   * - L‚Äôintitul√© de ceci est "Super ceci"
   * - La description du croque-mort du bois maudit est "Super description !"
   * - Le nombre de cheveux de Super Lutin est "inconnu"
   * - Le nombre d‚Äôobjets rouges maudits sous le lit du comte vert vaut 5
   * - La valeur du portefeuille ne vaut pas 3
   * - Le nombre de crottes du troll n‚Äôatteint pas 2
   * - Le texte du livre ne vaut pas "NRST"
   * - La valeur de ceci atteint la quantit√© de cela
   * - Le nombre d‚Äôobjets dans l‚Äôarmoir d√©passe 0
   * - Le nombre d‚Äôobjets sous le lit ne vaut pas 10
   * - Le nombre de maisons maudites du vendeur du chemin tournoyant ne d√©passe pas 3
   * - Le nombre d‚Äôobjets ensorcel√©s sur la table basse ne vaut pas 37
   * - Le nombre d‚Äôobjets poss√©d√©s atteint 10
   * - Le nombre de lampes allum√©es n‚Äôatteint pas 2
   * - Le nombre de macarons empil√©s ne d√©passe pas la charge de la table
   * - Le nombre de pi√®ces poss√©d√©es n‚Äôatteint pas le prix de cela
   * - Le nombre de livres poss√©d√©s d√©passe la taille de la biblioth√®que
   * - La valeur du portefeuille augmente du prix de l‚Äôaubergine üí•
   * - La taille de la pomme rouge diminue de 10 üí•
   */
  static readonly xConditionPropriete = /^(?:si )?(.+?) (?:ne |n(?:'|‚Äô))?(est|sont|vaut|valent|augmente(?:nt)?|diminue(?:nt)?|d√©passe(?:nt)?|attei(?:gne)?nt)(?: (pas|plus))? (.+)$/i;

  /**
   * [si] la(1) porte(2) vers(3) (ceci|cela|[le ]nord(5))(4) [n‚Äô]est(6) pas(7) ouverte(8)
   * - si la sortie vers le nord est obstru√©e
   * - si la sortie vers l‚Äôouest est innaccessible
   * - si la porte vers l‚Äôouest est verrouill√©e
   * - si la porte vers ceci n‚Äôest pas ouverte
   */
  static readonly xConditionLaSortieVers = /^(?:si )?(la )(sortie|porte) (vers) (ceci|cela|(?:(?:le |l‚Äô|l')?(ouest|est|nord|sud|haut|bas|dedans|dehors|int√©rieur|ext√©rieur))) (?:n‚Äô|n')?(est) (?:(pas|plus) )?(\S+)$/i;

  /**
   * [si] (le|la|les|‚Ä¶(2) xxx(3) yyy(4)|(ceci|cela))(1) (ne|n‚Äô) verbe(5) (ni|soit)(6) compl√©ment1(7) (ni|soit)(8) compl√©ment2(9) [(ni|soit) compl√©ment3(10)] [(ni|soit) compl√©ment3(11)]
   * - le joueur ne poss√®de ni le chat ni le chien ni l‚Äôautruche ni la poule
   */
  static readonly xConditionNiSoit = /^(?:si )?((?:(le |la |les |l'|l‚Äô|du |de (?:la|l‚Äô|l')|des |un |une )?(\S+|(?:\S+ (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+))(?:(?: )((?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)\S+))?)|ceci|cela|ici) (?:n(?:'|‚Äô)|ne )?(est|vaut|d√©passe|atteint|poss√®de|porte|contient)(?: (ni|soit) )(?:(.+?))(?: (\6) )(.+?)(?:(?: \6 )(.+?))?(?:(?: \6 )(.+?))?$/i;

  /**
   *  [si] (le|la|les|‚Ä¶(2) xxx(3) yyy(4)|(ceci|cela))(1) verbe(5)( pas| )(6)compl√©ment1(7) (et|ou)(8) compl√©ment2(9) [(et|ou) compl√©ment3(10)]  [(et|ou) compl√©ment3(11)]
   */
  static readonly xConditionOuEt = /^(?:si )?((?:(le |la |les |l'|l‚Äô|du |de (?:la|l‚Äô|l')|des |un |une )?(\S+|(?:\S+ (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+))(?:(?: )((?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)\S+))?)|ceci|cela|ici) (?:n(?:'|‚Äô)|ne )?(est|vaut|d√©passe|atteint|poss√®de|porte|contient) (pas(?: ))?(.+?)(?: (et|ou) )(.+?)(?:(?: \8 )(.+?))?(?:(?: \8 )(.+?))?$/i;

  /**
   * [si] (le|la|les|‚Ä¶(2) xxx(3) yyy(4)|(ceci|cela))(1) verbe(5) [pas]\(6) compl√©ment1(7) (ainsi que|ou bien|(mais pas|plus|bien))(8) compl√©ment2(9)
   * - Si le joueur ne poss√®de pas le jouet mais bien la trompette
   * - le seau contient la m√®che mais pas le briquet
   * - Si ceci est vivant mais pas une personne
   * - le joueur poss√®de la m√®che ou le briquet
   * - Si l‚Äôinventaire contient le sucre et la farine
   * - le joueur poss√®de le chat ou le chien ou l‚Äôautruche ou la poule
   */
  static readonly xConditionMaisPasEtOu = /^(?:si )?((?:(le |la |les |l'|l‚Äô|du |de (?:la|l‚Äô|l')|des |un |une )?(\S+|(?:\S+ (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+))(?:(?: )((?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)\S+))?)|ceci|cela|ici) (?:n(?:'|‚Äô)|ne )?(est|vaut|d√©passe|atteint|poss√®de|porte|contient)(?: (pas))? (?:(.+?)) (et|ou|mais (?:pas|plus|bien)) (.+?)$/i;

  /** 
   * si aucun(1) compl√©ment(2) attribut(3) (pour|vers)(4) (le|la|les|...(6) xxx(7) yyy(8))|(ceci|cela|ici)(5)
   */
  static readonly xConditionExistePourVers = /^(?:si )?((?:auc)?un(?:e)?) (\S+)(?: (?!n‚Äô|n'|existe)(\S+))? (?:(?:n‚Äô|n')?existe )?(pour|vers) ((?:(le |la |les |l'|l‚Äô|du |de (?:la|l‚Äô|l')|des |un |une )?(\S+|(?:\S+ (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+))(?:(?: )((?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)\S+))?)|ceci|cela|ici)$/i;

  /**
   * si (condition)(1) (:|,)(2) (consequences)(3)
   */
  static readonly xSeparerSiConditionConsequences = /^si (.+?)(?: )?(:|alors|,)(?: )?(.+)$/i;

  /**
   * (sinonsi|sinon)(1) :|, ({condition}consequences)(2)
   */
  static readonly xSeparerSinonConsequences = /^(sinonsi|sinon)(?: )?(?::|,)?(?: )?(.+)$/i;

  // ================================================================================================
  //  CONDITIONS (V3)
  // ================================================================================================

  /**
   * [si] (le|la|les|‚Ä¶(2) xxx(3) yyy(4)|(ceci|cela))(1) (ne|n‚Äô) verbe(5) (ni|soit)(6) compl√©ment1(7)
   * - le joueur ne poss√®de ni le chat ni le chien ni l‚Äôautruche ni la poule
   */
  static readonly xDebutConditionNiSoit = /^(?:si )?((?:(le |la |les |l'|l‚Äô|du |de (?:la|l‚Äô|l')|des |un |une )?(\S+|(?:\S+ (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+))(?:(?: )((?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)\S+))?)|ceci|cela|ici) (?:n(?:'|‚Äô)|ne )?(est|vaut|d√©passe|atteint|poss√®de|porte|contient)(?: (ni|soit) )(.+?)$/i;

  /**
   * (ni|soit)(1) compl√©ment1(2)
   * - ni la poule
   * - soit le duc de Brabant
   */
  static readonly xSuiteConditionNiSoit = /^(?:ni|soit) (.+?)$/i;


  /**
   * mais (pas|plus|ni|bien)(1) compl√©ment1(2)
   * - mais pas blanc
   * - mais ni caboss√©
   * - mais soit b
   * - mais bien poss√©d√©
   */
  static readonly xSuiteConditionMais = /^mais (?:pas|plus|ni|soit|bien) (.+?)$/i;

  // ================================================================================================
  //  INSTRUCTIONS
  // ================================================================================================

  /**
   * Instruction : verbe + compl√©ment
   * - Dire '.......'
   * - Remplacer ....... par .....
   * - Changer ..........
   * 
   * - Tests unitaires :
   *     - continuer l‚Äôaction
   *     - changer le joueur poss√®de la canne √† p√®che
   *     - dire 
   *     - dire "Bonjour !"
   *     - changer le score augmente de 1
   *     - üí• la pomme est verte
   */
  static readonly xInstruction = /^(\S+(?:ir|er|re)) (.+)?$/i;

  /**
   * Phrase simple avec un verbe conjug√©.
   * [le|la|les|...]\(1) (nom|ceci|cela)\(2) [attribut]\(3) [ne|n‚Äô|n'] ([se] verbe conjug√©)(4) [pas|plus]\(5) compl√©ment(6).
   * - la porte secr√®te n‚Äôest plus ferm√©e
   * - la canne √† p√®che rouge est ouverte
   * - ceci n‚Äôest plus vide
   * - cela se trouve dans le jardin
   * - les chauves-souris ne sont pas fix√©es
   * - la porte close est ouverte
   * 
   * - Tests unitaires :
   *     - la porte secr√®te n‚Äôest plus ferm√©e
   *     - la canne √† p√®che rouge est ouverte
   *     - ceci n‚Äôest plus vide
   *     - le score augmente de 1
   *     - üí• l‚Äôaction
   */
  static readonly xSuiteInstructionPhraseAvecVerbeConjugue = /^(le |la |les |l'|l‚Äô|du |de (?:la|l‚Äô|l')|des |un |une |quantit√©Ceci |quantit√©Cela )?(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )(?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)(\S+))? (?:ne |n(?:'|‚Äô))?(?!vers)((?:se (?:trouve(?:nt)?))|(?:est|sont|vaut|valent|augmente(?:nt)?|diminue(?:nt)?|porte(?:nt)?|contien(?:nen)?t|poss√®de(?:nt)?))(?: (pas|plus))?(?: (.+))?$/i;

  /**
   * - Manger tomate(2).
   * - D√©placer le(1) tr√©sor(2) vers(4) le(5) joueur(6).
   * - Utiliser l‚Äô(1)arc √† fl√®ches(2) rouill√©(3) avec(4) la(5) fl√®che(6) rouge(7).
   * - => d√©terminant(1) nom(2) √©pith√®te(3) pr√©position(4) d√©terminant(5) nom(6) √©pith√®te(7).
   * 
   * - Tests unitaires :
   *     - l'action
   *     - tomate
   *     - le tr√©sor vers le joueur
   *     - l‚Äôarc √† fl√®ches rouill√© avec la fl√®che rouge
   *     - üí• manger le biscuit
   */
  static readonly xComplementInstruction1ou2elements = /^(le |la |les |l'|l‚Äô|du |de (?:la|l‚Äô|l')|des |un |une |quantit√©Ceci |quantit√©Cela )?(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?)|(?:objets (?:dans|sous|sur) \S+))(?:(?: )(\S+))?(?: (avec|et|sur|sous|√†|au|aux|vers|dans|hors|pour|en|de) (le |la |l(?:‚Äô|')|les )?(\S+|(?:\S+ (?:√† |en |de(?: la)? |du |des |d'|d‚Äô)\S+))(?:(?: )(\S+))?)?$/i;

  /**
   * => valeur1(1) verbeConjugu√©(2) valeur2(3)
   * - La valeur de ceci vaut 3
   * - L‚Äôintitul√© de ceci est "Super ceci"
   * - La description du croque-mort du bois maudit est "Super description !"
   * - La taille de la pomme rouge diminue de 10
   * - Le nombre de cheveux de Super Lutin est "inconnu"
   * - Le nombre d‚Äôobjets rouges maudits sous le lit du comte vert vaut 5
   * - La valeur du portefeuille augmente du prix de l‚Äôaubergine
   * - La valeur du portefeuille ne vaut pas 3 üí•
   * 
   * Remarque: le verbe ¬´ √™tre ¬ª  DOIT √™tre suivi de guillemets, sinon ce n‚Äôest pas une propri√©t√© qui pr√©c√®de le verbe √™tre.
   */
  static readonly xChangerPropriete = /^(.+?) (est(?= ")|sont(?= ")|vaut|valent|(?:(?:augmente(?:nt)?|diminue(?:nt)?) (?:de(?: (?:la|l‚Äô|l'))?|du|des|d‚Äô|d'))) (?!pas|plus)(.+)$/i;

  // ================================================================================================
  //  PROPRI√âT√âS
  // ================================================================================================

  /**
   * d√©terminant(1) propri√©t√©(2) pr√©position(3) nom(4) √©pith√®te(5)
   * 
   * - La valeur de ceci
   * - L‚Äôintitul√© de ceci
   * - La description du croque-mort du bois maudit
   * - La taille de la pomme rouge
   * - Le texte du livre
   */
  static readonly xProprieteElement = /^(le (?!nombre)|la |les |l'|l‚Äô)?(?!le | la |les |l'|l‚Äô)(\S+?) (des |du |de la |de l(?:‚Äô|')|de |d'|d‚Äô)(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )(?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)(\S+?))?$/i;

  /**
   * Le nombre de|d‚Äô|d' propri√©t√©(1) prepositionElement(2) nomElement(3) √©pith√®teElement(4)
   * 
   * - Le nombre de cheveux de Super Lutin
   * - Le nombre de mal√©dictions des jumeaux
   * - Le nombre de pattes du mille-pattes grincheux
   * - Le nombre d‚Äôarbres du bois de la colline enchant√©e
   */
  static readonly xNombreDeProprieteElement = /^(?:le)? nombre (?:de |d‚Äô|d')(\S+) (des |du |de la |de l(?:‚Äô|')|de |d'|d‚Äô)(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )(?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)(\S+?))?$/i;

  /**
   * Le nombre de|d‚Äô|d' classe(1) attribut1(2) attribut2(3) [position(4) nomElement(5) √©pith√®teElement(6)]
   * 
   * - Le nombre d‚Äôobjets dans l‚Äôarmoir
   * - Le nombre d'objets ensorcel√©s sur la table basse
   * - Le nombre de jouets sous le lit
   * - Le nombre d‚Äôobjets rouges et maudits sous le lit du comte vert
   * - Le nombre d‚Äôarmes magiques poss√©d√©es
   * - Le nombre d‚Äôanimaux
   * - Le nombre de macarons empil√©s
   * - Le nombre de lampes allum√©es
   * - Le nombre de pi√®ces poss√©d√©es
   */
  static readonly xNombreDeClasseEtatPosition = /^(?:le)? nombre (?:de |d‚Äô|d')(\S+)(?:(?: )(?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)(\S+))?(?:(?: (?:et )?)(?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)(\S+))?(?: ((?:dans |sur |sous )(?:la |le |les |l‚Äô|l')?)(\S+?|(?:\S+? (?:√† |en |au(?:x)? |de (?:la |l'|l‚Äô)?|du |des |d'|d‚Äô)\S+?))(?:(?: )(?!\(|(?:ne|n‚Äô|n'|d‚Äô|d'|et|ou|soit|mais|un|de|du|dans|sur|avec|se|s‚Äô|s')\b)(\S+?))?)?$/i;


  // ================================================================================================
  //  DIVERS
  // ================================================================================================

  /**
   * Son(1) sac(2) est(3) ouvert(4)
   */
  static readonly xPhraseSimplePronom = /^(son |sa |ses )(\S+) ((?:se \S+)|\S+)( .+|)$/i;

  /** Tester s'il s'agit d'une section: partie/chapitre/sc√®ne du livre. 
   * - ex: Partie "Description du donjon".
   * - ex: Sc√®ne "Dans la cuisine".
   */
  static readonly xSection = /^(?:\s*)(partie|chapitre|sc√®ne)( ?)$/i;


  /** L'aide pour l'action manger(1) est  */
  static readonly xAide = /^L(?:'|‚Äô)aide pour (?:la commande|l(?:'|‚Äô)action) ((?:se |s'|s‚Äô)?.+) est(?: *)/i;

}